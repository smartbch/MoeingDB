# https://github.com/mvdan/github-actions-golang
name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: latest

          # Optional: working directory, useful for monorepos
          # working-directory: somedir

          # Optional: golangci-lint command line arguments.
          # args: --issues-exit-code=0

          # Optional: show only new issues if it's a pull request. The default value is `false`.
          # only-new-issues: true

          # Optional: if set to true then the action will use pre-installed Go.
          # skip-go-installation: true

          # Optional: if set to true then the action don't cache or restore ~/go/pkg.
          # skip-pkg-cache: true

          # Optional: if set to true then the action don't cache or restore ~/.cache/go-build.
          # skip-build-cache: true

  test:
    strategy:
      matrix:
        go-version: [1.17.x]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Dependencies
        run: |
          sudo apt install gcc-8 g++-8
          sudo apt install libgflags-dev zlib1g-dev libbz2-dev liblz4-dev libzstd-dev
          sudo apt install libsnappy-dev

      - name: Cache rocksdb
        id: cache-rocksdb
        uses: actions/cache@v2
        with:
          path: rocksdb-5.18.4
          key: ${{ runner.os }}-rocksdb-5.18.4

      - name: Build rocksdb
        if: steps.cache-rocksdb.outputs.cache-hit != 'true'
        run: |
          wget https://github.com/facebook/rocksdb/archive/refs/tags/v5.18.4.tar.gz
          tar zxvf v5.18.4.tar.gz
          cd rocksdb-5.18.4
          make CC=gcc-8 CXX=g++-8 shared_lib

      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: moeingdb

      - name: Build & Test
        run: |
          export ROCKSDB_PATH="$PWD/rocksdb-5.18.4"
          export CGO_CFLAGS="-I/$ROCKSDB_PATH/include"
          export CGO_LDFLAGS="-L/$ROCKSDB_PATH -lrocksdb -lstdc++ -lm -lz -lbz2 -lsnappy -llz4 -lzstd"
          export LD_LIBRARY_PATH=$ROCKSDB_PATH:/usr/local/lib
          cd moeingdb
          go build -tags cppbtree ./...
          go test -tags cppbtree ./...
